package ton_test

import (
	"context"
	"crypto/ed25519"
	"encoding/hex"
	"github.com/dsshard/vault-crypto-adapters/internal/test"
	"github.com/hashicorp/vault/sdk/logical"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func TestTonSignHash(t *testing.T) {
	b, storage := test.NewTestBackend(t)

	// Create manager
	req := logical.TestRequest(t, logical.CreateOperation, "key-managers/ton/svc")
	req.Storage = storage
	account, err := b.HandleRequest(context.Background(), req)
	require.NoError(t, err)

	// Sign zeroâ€‘hash
	zeroHash := "b5ee9c72410216010004bb00024788003737a999612e1750720f70e791cf2805d4d2740448f543a11afb1ec3e83530ac119001150114ff00f4a413f4bcf2c80b02020162031102b8d0eda2edfb01d072d721d200d200fa4021103450666f04f86102f862ed44d0d2000194fa40013195fa400101d1e202915be07021d74920c21fe30021c00021c121b08e135f038200c419f2f0c87f01ca0001cf16c9ed54e022f90120040701bc3101d31f218210946a98b6ba8e446c21d33f0131c8018210aff90f5758cb1fcb3fc9f84270705003804201503304c8cf8580ca00cf8440ce01fa02806acf40f400c901fb00c87f01ca0001cf16c9ed54db31e0218210819dbe99bae3020205019e6c21d33ffa40593202db3c3066c8598210327b2b4a5003cb1fcb3f01cf16c9f8427f705003804201503304c8cf8580ca00cf8440ce01fa02806acf40f400c901fb00c87f01ca0001cf16c9ed54db31060012f8425210c705f2e08404e682f0ad3896900c9fe3aec5bbcbb4b23a703f8bd3462f9807c984063bddffead61458bae3022082f0158e394e7cc73a9aeb362957fe037665588aef16f3bd68580c13ab84097cf22abae30282f03fad5156e1a4abdac5e5998135894d875d475640a6f95ecf19efc63c33b0f993bae30201c00008090c0e01ee5f04f842f8416f246c31d431fa00fa4031fa40813eec21d74ac200f2f4d430d07021d749c21f973020d70b1fc000de81484701f2f4d31f31c801cf16c9820086c221d0d749c200f2f4c87101cb1f5004cf1601cf1601fa02ccf82301cb1fc9c88258c000000000000000000000000101cb67ccc970fb000b02ea5f04816cb7f8425220c705f2f4f8416f24135f03f8416f24fa40fa0071d721fa00fa00306c6170f83aa182103b9aca00a18200d55721c200f2f472882355205a6d6d40037fc8cf8580ca00cf8440ce01fa028069cf40025c6e016eb0935bcf819d58cf8680cf8480f400f400cf81e2f400c901fb000a0b001c000000005769746864726177616c0016c87f01ca0001cf16c9ed5401fe5f03f8416f246c31fa40fa0030816cb7f8425240c705f2f48200eecf21c200f2f4c882100f8a7ea501cb1f7001cb3f01fa0222cf16f828cf167001cb0071fa027001cb00c9821005f5e10072585a6d6d40037fc8cf8580ca00cf8440ce01fa028069cf40025c6e016eb0935bcf819d58cf8680cf8480f400f400cf81e2f4000d001ec901fb00c87f01ca0001cf16c9ed5401be8ed6c21f8ed0820086c28b082201f90101f901bdf2f4db3cc87001cb1ff842cf16f8416f24135f03fa02ccf82301cb1fc9c88258c000000000000000000000000101cb67ccc970fb00c87f01ca0001cf16c9ed54db31e05b925f03e2f2c0820f0142c87001cb1f6f00016f8c6d6f8c01db3c6f2201c993216eb396016f2259ccc9e8311000ba20d74a21d7499720c20022c200b18e4a036f22807f22cf31ab02a105ab025155b60820c2009c20aa0215d7185033cf164014de596f025341a1c20099c8016f025044a1aa028e123133c20099d430d020d74a21d749927020e2e2e85f030201201213012fbe28ef6a268690000ca7d200098cafd200080e8f16d9e18c14012fbc936f6a268690000ca7d200098cafd200080e8f16d9e18c140002200043400445e5b8990427dff39fb222804a2172fa1ee1c675e0b35571d29bbd88cf63ed285127560d"
	req = logical.TestRequest(t, logical.UpdateOperation, "key-managers/ton/svc/sign")
	req.Storage = storage
	req.Data = map[string]interface{}{
		"hash":    zeroHash,
		"address": account.Data["address"],
	}
	resp, err := b.HandleRequest(context.Background(), req)
	require.NoError(t, err)
	sigHex := resp.Data["signature"].(string)
	sig, err := hex.DecodeString(sigHex)
	require.NoError(t, err)
	assert.Len(t, sig, ed25519.SignatureSize)
}
